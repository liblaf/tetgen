name: CI

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Task
        uses: arduino/setup-task@v1
        with:
          repo-token: ${{ github.token }}
      - name: Install GNU Softwares
        uses: liblaf/template/.github/actions/install@main
        with:
          brew: coreutils gnu-tar make wget
          choco: gnuwin32-coreutils.install make wget
      - name: Build
        run: task dist
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-${{ runner.arch }}
          path: dist/*
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

  release:
    name: Release
    permissions:
      contents: write
    needs:
      - build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - id: version
        name: Read Version
        run: echo "version=$(cat version.txt)" >> "$GITHUB_OUTPUT"
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true
      - name: Create GitHub Release
        uses: liblaf/template/.github/actions/release@main
        with:
          tag: v${{ steps.version.outputs.version }}
          files: |
            artifacts/*
